{"version":3,"sources":["components/Formatter/components/ConditionSelector/ConditionSelector.tsx","components/Formatter/components/ElementSelector/ElementSelector.tsx","components/DeletableTag/DeletableTag.tsx","components/Formatter/components/ConditionDisplay/ConditionDisplay.tsx","components/Formatter/components/ElementDisplay/ElementDisplay.tsx","components/Formatter/Formatter.tsx","styles/index.ts","hooks.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["KEYS","ElementSelector","onChange","onChangeElement","newValue","columns","rows","gutter","data","direction","value","ARRAY_KEYS","CLASS","ID","TEXT","TYPE","CHECKED","ConditionSelector","onSubmitCondition","onSubmit","contains","key","mapConditionToString","name","autoComplete","DeletableTag","onClick","label","type","style","display","fontSize","alignItems","paddingLeft","ConditionDisplay","onDeleteCondition","conditions","spacing","length","map","condition","index","isText","isPulsing","height","ElementDisplay","onDeleteElement","element","Formatter","useState","setElement","setConditions","useEffect","reducedConditions","slice","reduce","carry","indexToRemove","filter","a","flexVerticalCenter","getWindowDimensions","window","width","innerWidth","innerHeight","Header","color","colors","whiteSmoke","Body","selector","setSelector","padding","borderRadius","backgroundColor","white","event","App","isLorge","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","breakpoints","large","Provider","themes","ui2","grey6","ui3","colSpan","row","column","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.348f2918.chunk.js","sourcesContent":["import { PaddedContainer, Label, DropdownField, TextField, Checkbox, Button, Form, FormSubmitEvent, Grid } from \"precise-ui/dist/es6\"\nimport React from \"react\";\n\nenum KEYS {\n  CLASS = '@class',\n  ID = '@id',\n  TEXT = 'text()',\n  TYPE = '@type',\n  CHECKED = '@checked',\n}\n\nconst ARRAY_KEYS = [\n  KEYS.CLASS,\n  KEYS.ID,\n  KEYS.TEXT,\n  KEYS.TYPE,\n  KEYS.CHECKED,\n]\n\ntype Condition = {key?: KEYS, value?: string, contains?: boolean}\n\nconst mapConditionToString = ({key, value, contains}: Condition) =>\n  key === KEYS.CHECKED\n    ? `${key}`\n    : (contains ? `contains(${key}, \"${value}\")` : `${key}=\"${value}\"`);\n\ntype ConditionSelectorProps = {\n  onSubmitCondition:(element: string) => void\n};\n\nexport const ConditionSelector: React.FC<ConditionSelectorProps> = ({onSubmitCondition}) => {\n  const onFormSubmit = ({data: { contains, key, value }}: FormSubmitEvent) => {\n    onSubmitCondition(mapConditionToString({\n      contains,\n      value,\n      key: ARRAY_KEYS[key]\n    }));\n  }\n\n  return (\n    <Grid columns={1} rows={['333px', '1fr']}>\n      <Form onSubmit={onFormSubmit} >\n        <PaddedContainer gutter=\"small\">\n          <Label>Attribute</Label>\n        </PaddedContainer>\n\n        <PaddedContainer gutter=\"small\">\n          <DropdownField data={ARRAY_KEYS} name=\"key\"/>\n        </PaddedContainer>\n\n        <PaddedContainer gutter=\"small\">\n          <Label>Value</Label>\n        </PaddedContainer>\n\n        <PaddedContainer gutter=\"small\">\n          <TextField name=\"value\" autoComplete='off' />\n        </PaddedContainer>\n\n        <PaddedContainer gutter=\"small\">\n          <Checkbox name=\"contains\">Contains</Checkbox>\n        </PaddedContainer>\n\n        <PaddedContainer gutter=\"small\">\n          <Button>Add Condition</Button>\n        </PaddedContainer>\n      </Form>\n    </Grid>\n  )\n}\n","import { PaddedContainer, Label, DropdownField, InputChangeEvent, Grid } from \"precise-ui/dist/es6\"\nimport React from \"react\";\n\ntype ElementSelectorProps = {\n  onChange:(element: string) => void\n};\n\nexport const ElementSelector: React.FC<ElementSelectorProps> = ({onChange}) => {\n\n  const onChangeElement = (newValue: string) => {\n    onChange(newValue);\n  }\n\n  return (\n    <Grid columns={1} rows={['333px', '1fr']}>\n      <div>\n        <PaddedContainer gutter='small'>\n          <Label>Element</Label>\n        </PaddedContainer>\n\n        <PaddedContainer gutter='small'>\n          <DropdownField data={['button', 'a']} direction={0} onChange={\n            ({value}: InputChangeEvent<string[]>) => onChangeElement(value[0])\n          }/>\n        </PaddedContainer>\n      </div>\n    </Grid>\n  )\n}","import React from 'react';\nimport { Container, Icon, Tag, TagType } from 'precise-ui'\n\ntype DeletableTagProps = {\n  onClick: () => void\n  label: string\n  type?: TagType\n}\n\nexport const DeletableTag: React.FC<DeletableTagProps> = ({onClick, label, type}) =>\n  <Tag onClick={onClick} type={type ?? 'primary'}>\n    <Container style={{display: 'flex', fontSize: '16px', alignItems: 'center'}}>\n      <span>{label}</span>\n      <Icon style={{paddingLeft: '8px', alignItems: 'center'}} name=\"Cancel\" />\n    </Container>\n  </Tag>;\n\n","import { PaddedContainer, Skeleton, Grid } from \"precise-ui/dist/es6\"\nimport React from \"react\";\nimport { DeletableTag } from \"../../../DeletableTag\";\n\ntype ConditionDisplayProps = {\n  onDeleteCondition:(conditionIndex: number) => void\n  conditions: string[]\n};\n\nexport const ConditionDisplay: React.FC<ConditionDisplayProps> = ({onDeleteCondition, conditions}) => (\n  <PaddedContainer gutter=\"small\">\n    <Grid columns={1} spacing='8px'>\n      {conditions.length > 0\n        ? conditions.map((condition, index) => <DeletableTag type=\"secondary\" onClick={() => onDeleteCondition(index)} key={index} label={condition} />)\n        : <Skeleton isText isPulsing={false} height={'25px'} /> }\n    </Grid>\n  </PaddedContainer>\n)\n\n","import { PaddedContainer, Skeleton } from \"precise-ui/dist/es6\"\nimport React from \"react\";\nimport { DeletableTag } from \"../../../DeletableTag\";\n\ntype ElementDisplayProps = {\n  onDeleteElement:() => void\n  element: string|null\n};\n\nexport const ElementDisplay: React.FC<ElementDisplayProps> = ({onDeleteElement, element}) => (\n  <PaddedContainer gutter=\"small\">\n    {element\n      ? <DeletableTag onClick={() => onDeleteElement()} label={element} />\n      : <Skeleton isText isPulsing={false} height={'25px'} />\n    }\n  </PaddedContainer>\n)\n\n","import React, { useEffect, useState } from 'react';\nimport { Grid } from 'precise-ui'\nimport { ElementSelector } from './components/ElementSelector';\nimport { ConditionSelector } from './components/ConditionSelector';\nimport { ConditionDisplay } from './components/ConditionDisplay';\nimport { ElementDisplay } from './components/ElementDisplay';\n\ntype FormatterProps = {\n  onChange: (selector: string) => void\n}\n\nexport const Formatter: React.FC<FormatterProps> = ({onChange}) => {\n  const [element, setElement] = useState<string|null>(null);\n  const [conditions, setConditions] = useState<string[]>([]);\n\n  useEffect(() => {\n    if (!element) {\n      onChange('');\n    } else if (conditions.length > 0) {\n      const reducedConditions = conditions.length !== 1\n        ? conditions[0] + conditions.slice(1).reduce((carry, condition) => carry + ' and ' + (condition), '')\n        : conditions[0];\n\n      onChange('//' + element + (reducedConditions && '[' + reducedConditions + ']'));\n    } else {\n      onChange('//' + element);\n    }\n\n  }, [element, conditions, onChange])\n\n  const addCondition = (condition: string) => setConditions(conditions => [...conditions, condition]);\n  const removeConditionAtIndex = (indexToRemove: number) => setConditions(\n    conditions.filter((a, index) => index !== indexToRemove)\n  );\n\n  return (\n    <Grid columns={2} rows={['1fr', 'fit-content']} spacing='16px'>\n      <ElementSelector onChange={(element) => setElement(element)} />\n      <ConditionSelector onSubmitCondition={addCondition} />\n      <ElementDisplay element={element} onDeleteElement={() => setElement(null)} />\n      <ConditionDisplay conditions={conditions} onDeleteCondition={removeConditionAtIndex} />\n    </Grid>\n  );\n}\n","import { CSSProperties } from 'react';\n\nexport const flexVerticalCenter: CSSProperties = {\n  display: 'flex',\n  alignItems: 'center',\n}","import { useState, useEffect } from 'react';\n\nconst getWindowDimensions = () => {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nexport const useWindowDimensions = () => {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}","import React, { useState } from 'react';\nimport { colors, Container, Grid, GridArea, Headline, PaddedContainer, Skeleton, ThemeContext, themes } from 'precise-ui'\nimport { Formatter } from './components/Formatter';\nimport { flexVerticalCenter } from './styles';\nimport { useWindowDimensions } from './hooks';\nimport { breakpoints } from 'precise-ui/dist/es6/themes';\n\nconst Header = () =>\n  <PaddedContainer gutter=\"xxlarge\">\n    <header>\n      <Headline style={{color: colors.whiteSmoke}}>Xpath Generator</Headline>\n    </header>\n  </PaddedContainer>\n\nconst Body = () => {\n  const [selector, setSelector] = useState<string>();\n  const onChange = (event: string) => {\n    setSelector(event);\n  }\n\n  return (\n    <>\n      <PaddedContainer gutter=\"large\">\n        <Container style={{ width: 'unset', padding: '16px', borderRadius: '6px', backgroundColor: colors.white}}>\n          <Formatter onChange={onChange} />\n        </Container>\n      </PaddedContainer>\n\n      <PaddedContainer gutter=\"large\">\n        <Container style={{ width: 'unset', padding: '24px', borderRadius: '6px', backgroundColor: colors.white}}>\n          {selector\n            ? <code>{selector}</code>\n            : <Skeleton isText isPulsing={false} height={'18px'}  />\n          }\n        </Container>\n      </PaddedContainer>\n    </>\n  );\n}\n\nexport const App: React.VFC = () => {\n  const { width } = useWindowDimensions();\n\n  const isLorge = width > breakpoints.large;\n  return (\n    <ThemeContext.Provider value={{ ...themes, ui2: colors.grey6, ui3: colors.grey6 }}>\n      <Container style={{ height: '100vh', backgroundColor: colors.whiteSmoke }}>\n          <Grid rows={['1fr', '4fr']} columns={8} spacing={'16px'}>\n            <GridArea colSpan={8} row={0} column={0} style={{ backgroundColor: '#141b4d' }} />\n\n            <GridArea colSpan={isLorge ? 6 : 8} row={0} column={isLorge ? 1 : 0} style={flexVerticalCenter}>\n              <Header />\n            </GridArea>\n\n            <GridArea colSpan={isLorge ? 6 : 8} row={1} column={isLorge ? 1 : 0}>\n              <Body />\n            </GridArea>\n          </Grid>\n      </Container>\n    </ThemeContext.Provider>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}